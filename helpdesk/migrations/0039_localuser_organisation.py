# Generated by Django 3.2.9 on 2022-01-13 10:34

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length')
    ]

    run_before = [
        ('helpdesk', '0001_initial'),
        ('helpdesk', '0002_populate_usersettings'),
        ('helpdesk', '0003_initial_data_import'),
        ('helpdesk', '0004_add_per_queue_staff_membership'),
        ('helpdesk', '0005_queues_no_null'),
        ('helpdesk', '0006_email_maxlength'),
        ('helpdesk', '0007_max_length_by_integer'),
        ('helpdesk', '0008_extra_for_permissions'),
        ('helpdesk', '0009_migrate_queuemembership'),
        ('helpdesk', '0010_remove_queuemembership'),
        ('helpdesk', '0011_admin_related_improvements'),
        ('helpdesk', '0012_queue_default_owner'),
        ('helpdesk', '0013_email_box_local_dir_and_logging'),
        ('helpdesk', '0014_usersettings_related_name'),
        ('helpdesk', '0015_expand_permission_name_size'),
        ('helpdesk', '0016_alter_model_options'),
        ('helpdesk', '0017_default_owner_on_delete_null'),
        ('helpdesk', '0018_ticket_secret_key'),
        ('helpdesk', '0019_ticket_secret_key'),
        ('helpdesk', '0020_depickle_user_settings'),
        ('helpdesk', '0021_voting_tracker'),
        ('helpdesk', '0022_add_submitter_email_id_field_to_ticket'),
        ('helpdesk', '0023_add_enable_notifications_on_email_events_to_ticket'),
        ('helpdesk', '0024_time_spent'),
        ('helpdesk', '0025_queue_dedicated_time'),
        ('helpdesk', '0026_kbitem_attachments'),
        ('helpdesk', '0027_auto_20200107_1221'),
        ('helpdesk', '0028_kbitem_team'),
        ('helpdesk', '0029_kbcategory_public'),
        ('helpdesk', '0030_add_kbcategory_name'),
        ('helpdesk', '0031_auto_20200225_1440'),
        ('helpdesk', '0032_kbitem_enabled'),
        ('helpdesk', '0033_ticket_merged_to'),
        ('helpdesk', '0034_create_email_template_for_merged'),
        ('helpdesk', '0035_alter_email_on_ticket_change'),
        ('helpdesk', '0036_add_attachment_validator'),
        ('helpdesk', '0037_ticket_target'),
        ('helpdesk', '0038_alter_ticket_target')
    ]

    operations = [
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Organisation', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='LocalUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('organisation', models.ManyToManyField(help_text='Name of the organisation that the user belongs to', to='helpdesk.Organisation')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
